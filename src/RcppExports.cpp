// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MMCL
List MMCL(NumericVector y, NumericVector X, NumericVector d, NumericVector coef, NumericVector lambda, double tht, int frailty, int penalty, double tune, int a, int b, int p);
RcppExport SEXP _frailtyMMpen_MMCL(SEXP ySEXP, SEXP XSEXP, SEXP dSEXP, SEXP coefSEXP, SEXP lambdaSEXP, SEXP thtSEXP, SEXP frailtySEXP, SEXP penaltySEXP, SEXP tuneSEXP, SEXP aSEXP, SEXP bSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tht(thtSEXP);
    Rcpp::traits::input_parameter< int >::type frailty(frailtySEXP);
    Rcpp::traits::input_parameter< int >::type penalty(penaltySEXP);
    Rcpp::traits::input_parameter< double >::type tune(tuneSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(MMCL(y, X, d, coef, lambda, tht, frailty, penalty, tune, a, b, p));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_frailtyMMpen_MMCL", (DL_FUNC) &_frailtyMMpen_MMCL, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_frailtyMMpen(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
